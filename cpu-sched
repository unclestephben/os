CPU-sched


#Round Robin

print("Round Robin  \n\n\n\n")
n = int(input("Enter the Number of Processes: \n"))
time_quantum = int(input("Enter the Time Quantum: \n"))

d = dict()

for i in range(n):
    key = "P" + str(i + 1)
    a = int(input("Enter arrival time of process " + str(i + 1) + ": "))
    b = int(input("Enter burst time of process " + str(i + 1) + ": "))
    l = []
    l.append(a)
    l.append(b)
    d[key] = l

queue = []
for i in range(n):
    queue.append(i)

current_time = 0
ET = [0] * n
remaining_burst_time = [d[key][1] for key in d]

while any(remaining_burst_time):
    for i in queue:
        if remaining_burst_time[i] <= 0:
            continue

        execute_time = min(time_quantum, remaining_burst_time[i])
        current_time += execute_time
        remaining_burst_time[i] -= execute_time
        ET[i] = current_time

    queue = [i for i in range(n) if remaining_burst_time[i] > 0]

TAT = [ET[i] - d[key][0] for i, key in enumerate(d)]
WT = [TAT[i] - d[key][1] for i, key in enumerate(d)]

print("Process | Arrival | Burst | Exit | Turn Around | Wait |")
for i, key in enumerate(d):
    print("   ", key, "   |   ", d[key][0], " |    ", d[key][1], " |    ", ET[i], "  |    ", TAT[i], "  |   ", WT[i],
          "   |  ")

avg_TAT = sum(TAT) / n
avg_WT = sum(WT) / n

print("Average Turnaround Time:\n\n ", avg_TAT)
print("Average Waiting Time: \n\n ", avg_WT)


#SJF

print("SJF (Non-Preemptive)  \n\n\n\n")
n = int(input("Enter the Number of Processes: \n"))
d = dict()

for i in range(n):
    key = "P" + str(i + 1)
    a = int(input("Enter arrival time of process " + str(i + 1) + ": "))
    b = int(input("Enter burst time of process " + str(i + 1) + ": "))
    l = []
    l.append(a)
    l.append(b)
    d[key] = l

d = sorted(d.items(), key=lambda item: item[1][0])

ET = []
current_time = 0

for i in range(len(d)):
    current_time = max(current_time, d[i][1][0])  # Ensure no negative waiting time
    ET.append(current_time + d[i][1][1])
    current_time = ET[i]

TAT = [ET[i] - d[i][1][0] for i in range(len(d))]
WT = [TAT[i] - d[i][1][1] for i in range(len(d))]

print("Process | Arrival | Burst | Exit | Turn Around | Wait |")
for i in range(n):
    print("   ", d[i][0], "   |   ", d[i][1][0], " |    ", d[i][1][1], " |    ", ET[i], "  |    ", TAT[i], "  |   ",
          WT[i], "   |  ")

avg_TAT = sum(TAT) / n
avg_WT = sum(WT) / n

print("Average Turnaround Time:\n\n ", avg_TAT)
print("Average Waiting Time: \n\n ", avg_WT)


FCFS

print("FCFS  \n\n\n\n")
n = int (input("Enter the Number of Process : \n"))
d = dict ()

for i in range(n):
    key = "P"+ str(i+1)
    a = int(input("Enter arrival time of process" + str(i+1)+ ":"))
    b = int(input("Enter burst  time of process" + str(i+1)+ ":"))
    l = []
    l.append(a)
    l.append(b)
    d[key] = l

d = sorted(d.items(), key =  lambda item : item[1][0])

ET = []

for i in range(len(d)):
    if (i == 0):
        ET.append(d[i][1][1])
    
    else:
        ET.append(ET[i-1] + d[i][1][1])     
        

TAT = []
for i in range(len(d)):
    TAT.append(ET[i] - d[i][1][0])
 
WT = []
for i in range(len(d)):
    WT.append(TAT[i] - d[i][1][1])
    
print("Process | Arrival | Burst | Exit | Turn Around | Wait |")
for i in range(n):
    print("   ",d[i][0],"   |   ",d[i][1][0]," |    ",d[i][1][1]," |    ",ET[i],"  |    ",TAT[i],"  |   ",WT[i],"   |  ")


avg_TAT = sum(TAT)/n

avg_WT = sum(WT)/n

print("Average TURN AROUND Time:\n\n ",avg_TAT)

print("Average Waiting Time: \n\n ",avg_WT)

Priority

print("Priority Scheduling (Non-preemptive)\n\n\n\n")
n = int(input("Enter the Number of Processes: \n"))
d = dict()

for i in range(n):
    key = "P" + str(i + 1)
    a = int(input("Enter arrival time of process " + str(i + 1) + ": "))
    b = int(input("Enter burst time of process " + str(i + 1) + ": "))
    p = int(input("Enter priority of process " + str(i + 1) + ": "))
    l = []
    l.extend([a, b, p])
    d[key] = l

d = sorted(d.items(), key=lambda item: item[1][0])

ET = []

for i in range(len(d)):
    if i == 0:
        ET.append(d[i][1][1])
    else:
        ET.append(ET[i - 1] + d[i][1][1])

TAT = []
for i in range(len(d)):
    TAT.append(ET[i] - d[i][1][0])

WT = []
for i in range(len(d)):
    WT.append(TAT[i] - d[i][1][1])

print("Process | Arrival | Burst | Priority | Exit | Turn Around | Wait |")
for i in range(n):
    print("   ", d[i][0], "   |   ", d[i][1][0], " |    ", d[i][1][1], " |    ", d[i][1][2], " |    ", ET[i], "  |    ", TAT[i], "  |   ", WT[i], "   |  ")

avg_TAT = sum(TAT) / n
avg_WT = sum(WT) / n

print("\nAverage TURN AROUND Time: ", avg_TAT)
print("Average Waiting Time: ", avg_WT)
